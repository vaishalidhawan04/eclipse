package recursion_lec5;

public class RepeatedCharAllowedPermutations {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String ques="acba";
		PrintPermutations(ques,"");
	}
//	public static void PrintPermutations(String ques, String ans) {
//		int[] arr=new int[123];
//		if(ques.length()==0) {
//			System.out.print(ans + " ");
//			return;
//		}
//		for(int i=0;i<ques.length(); i++) {
//			String s1 = ques.substring(0,i);
//			String s2 = ques.substring(i+1);
//			char ch=ques.charAt(i);
//			arr[ch]++;
//			if(arr[ch]<=1) {
//				PrintPermutations(s1+s2, ans+ch);
//			}
//			
//		}
//	}
	
	
	public static void PrintPermutations(String ques, String ans) {
		int[] arr=new int[123];
		if(ques.length()==0) {
			System.out.print(ans + " ");
			return;
		}
		for(int i=0;i<ques.length(); i++) {
			char ch=ques.charAt(i);
			boolean flag=true;
			for(int j=i+1;j<ques.length(); j++) {
				if(ques.charAt(j)==ch) {
					flag=false;
					break;
				}
			}
			if(flag==true) {
				String s1 = ques.substring(0,i);
				String s2 = ques.substring(i+1);
				PrintPermutations(s1+s2, ans+ch);
			}
		}
	}

}
